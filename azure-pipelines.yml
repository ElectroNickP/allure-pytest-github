# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: Bash@3
  displayName: 'Install pytest'
  inputs:
    targetType: 'inline'
    script: |
      pip install pytest allure-pytest
- task: Bash@3
  displayName: 'Install allurectl'
  inputs:
    targetType: 'inline'
    script: |
      wget https://github.com/allure-framework/allurectl/releases/latest/download/allurectl_linux_386 -O ./allurectl
      chmod +x ./allurectl

- script: |
    ./allurectl job-run plan --output-file $(ALLURE_TESTPLAN_PATH)
    # if test -f $(ALLURE_TESTPLAN_PATH); then cat $(ALLURE_TESTPLAN_PATH); fi
    ./allurectl watch -- pytest --alluredir=$(ALLURE_RESULTS)
    printenv | grep "ALLURE_"
    printenv | grep "AZURE_"

  displayName: 'running pytest tests'
  env:
    ALLURE_ENDPOINT: $(ALLURE_ENDPOINT)
    ALLURE_PROJECT_ID: $(ALLURE_PROJECT_ID)
    ALLURE_TOKEN: $(ALLURE_TOKEN)
    ALLURE_TESTPLAN_PATH: $(ALLURE_TESTPLAN_PATH)
    ALLURE_RESULTS: "./allure-results"
    ALLURE_LAUNCH_NAME: "$(Build.DefinitionName)-$(Build.BuildNumber)"
    TEST_BRANCH: $(Build.SourceBranchName)
    ALLURE_LAUNCH_TAGS: "$(Build.SourceBranchName), azure"
    AZURE_BROWSER: $(AZURE_BROWSER)
    AZURE_HOST: $(AZURE_HOST)
